import colors from 'constants/colors';
import React from 'react';
import { IconButton } from 'react-native-paper';
import { Navigation } from 'interfaces/navigation';
import i18next from 'i18next';

import Routes from '../routes';

// Default nav options for all screens
const defaultNavOptions = ({ route }: Navigation) => ({
    // Change screen title from i18n traslates files
    headerTitle: i18next.t(`app:${route.name}`),
    // TODO: The following options are examples. Change them to your need
    headerStyle: {
      backgroundColor: colors.blue
    },
    headerBackTitleStyle: {
      color: colors.white
    },
    headerTitleStyle: {
      color: colors.white
    },
    headerTintColor: colors.white
});

export const appStackNavConfig = {
  screenOptions: defaultNavOptions
};
<%_ if(features.loginandsignup) { _%>

export const authStackNavConfig = {
  screenOptions: defaultNavOptions,
  initialRouteName: Routes.Login
};
<%_ } _%>
<%_ if(features.tabs) { _%>

const defaultTabNavOptions = {
  // TODO: Change them to your need
}

export const tabNavConfig = {
  // TODO: Change them to your need
  // tabBarOptions: {
  //   activeTintColor: 'blue',
  //   inactiveTintColor: 'gray',
  // }
  screenOptions: defaultTabNavOptions
};
<%_ } _%>
<%_ if(features.drawer) { _%>

const defaultDrawerNavOptions = {
  // TODO: Change them to your need
};

export const drawerStackNavConfig = {
  screenOptions: defaultDrawerNavOptions
};
<%_ } _%>

// Default nav options for all screens
export const appScreensNavOptions = {
  // TODO: Add here the screens nav options that changes with respect to
  // the default ones defined in defaultNavOptions, for example...
  <%_ if(features.loginandsignup) { _%>
  [Routes.Login]: {
    headerShown: false
  },
  <%_ } _%>
  <%_ if(features.onboarding) { _%>
  [Routes.Onboarding]: {
    headerShown: false
  },
  <%_ } _%>
  [Routes.Home]: ({ navigation, route }: Navigation) => ({
    headerTitle: i18next.t(`app:${route.name}`),
    <%_ if(features.camera) { _%>
    headerRight: () => (
      <IconButton
        icon="camera"
        onPress={() => navigation.navigate(Routes.Camera)}
        color="white"
      />
    )
    <%_ } _%>
  }),
  <%_ if(features.camera) { _%>
  [Routes.Camera]: {
    headerShown: false
  },
  [Routes.CameraPreview]: {
    headerShown: false
  },
  <%_ } _%>
};
