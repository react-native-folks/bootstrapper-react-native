import React from 'react';
import { createStackNavigator } from '@react-navigation/stack';
<%_ if(features.onboarding || features.loginandsignup) { _%>
<%_ if(features.statemanagement.redux) { _%>
import { useSelector } from 'hooks/redux';
<%_ } _%>
<%_ if(features.statemanagement.recoil) { _%>
import { useRecoilValue } from 'recoil';
import { <%_ if(features.onboarding) { _%>onboardingState, <%_ } _%><%_ if(features.loginandsignup) { _%>currentUserState<%_ } _%> } from 'recoilState/auth/atoms';
<%_ } _%>
<%_ } _%>
import {
  <%_ if(features.loginandsignup) { _%>
  authStackNavConfig,
  <%_ } _%>
  appStackNavConfig,
} from './config/screensOptions';
import {
  <%_ if(features.loginandsignup) { _%>
  AuthStack,
  <%_ } _%>
  AppStack,
  <%_ if(features.onboarding) { _%>
  OnboardingStack,
  <%_ } _%>
} from './stacks';

const Stack = createStackNavigator();

<%_ if(features.onboarding) { _%>
const Navigator = () => {
  <%_ if(features.statemanagement.redux) { _%>
  const hasAccessOnboarding = useSelector(
    state => state.auth.hasAccessOnboarding
  );
  <%_ } _%>
  <%_ if(features.statemanagement.recoil) { _%>
  const hasAccessOnboarding = useRecoilValue(onboardingState);
  <%_ } _%>
  
  
  <%_ if(features.loginandsignup) { _%>
  <%_ if(features.statemanagement.redux) { _%>
  const currentUser = useSelector(state => state.auth.currentUser);
  <%_ } _%>
  <%_ if(features.statemanagement.recoil) { _%>
  const currentUser = useRecoilValue(currentUserState);
  <%_ } _%>
  

  const defaultStackConfig = currentUser ? appStackNavConfig : authStackNavConfig;
  
  return (
    <Stack.Navigator {...defaultStackConfig}>
      {currentUser ? (hasAccessOnboarding ? AppStack() : OnboardingStack()) : AuthStack()}
    </Stack.Navigator>
  );
  <%_ } else { _%>
  return (
    <Stack.Navigator {...appStackNavConfig}>
      {hasAccessOnboarding ? AppStack() : OnboardingStack()}
    </Stack.Navigator>
  );
  <%_ }_%>
};
<%_ } else { _%>
const Navigator = () => {
  <%_ if(features.loginandsignup) { _%>
  <%_ if(features.statemanagement.redux) { _%>
  const currentUser = useSelector(state => state.auth.currentUser);
  <%_ } _%>
  <%_ if(features.statemanagement.recoil) { _%>
  const currentUser = useRecoilValue(currentUserState);
  <%_ } _%>

  const defaultStackConfig = currentUser ? appStackNavConfig : authStackNavConfig;
  
  return <Stack.Navigator {...defaultStackConfig}>{currentUser ? AppStack() : AuthStack()}</Stack.Navigator>;
  <%_ } else { _%>
  return <Stack.Navigator {...appStackNavConfig}>{AppStack()}</Stack.Navigator>;
  <%_ } _%>
};
<%_ } _%>

export default Navigator;
